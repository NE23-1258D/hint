# ベースイメージとしてNode.jsの公式イメージを使用します。
# 軽量なAlpine Linuxベースのバージョン20を指定しています。
FROM node:20-alpine

# コンテナ内の作業ディレクトリを設定します。
# アプリケーションのファイルはこのディレクトリに配置されます。
WORKDIR /app

# package.json と package-lock.json (または yarn.lock) を作業ディレクトリにコピーします。
# これらを先にコピーして依存関係をインストールすることで、
# コードの変更があっても依存関係のインストールがキャッシュされ、ビルド時間を短縮できます。
COPY package*.json ./

# Node.jsの依存関係をインストールします。
# --production フラグは本番環境に必要な依存関係のみをインストールします。
# 開発依存関係も必要な場合はこのフラグを削除してください。
RUN npm install --production

# プロジェクトの残りのすべてのファイルとディレクトリをコンテナの作業ディレクトリにコピーします。
COPY . .

# アプリケーションがリッスンするポートを公開します。
# これは単なるドキュメントであり、実際にポートを公開するにはdocker run -p または docker-compose.yml でポートマッピングが必要です。
EXPOSE 3000

# コンテナが起動したときに実行されるデフォルトのコマンドを設定します。
# package.jsonの"scripts"セクションに定義されている"start"スクリプトを実行します。
CMD ["npm", "start"]
